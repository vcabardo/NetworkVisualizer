<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Network</title>
    <script
      type="text/javascript",
      src="https://unpkg.com/vis-network/standalone/umd/vis-network.min.js"
    ></script>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title> Document </title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css"
    integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <link rel="stylesheet" href="styles/style.css">
    <script src="http://localhost:3000/socket.io/socket.io.js"></script>
  </head>
  <body>
    <%- include("../partials/header.ejs") %>
    <div class="container-fluid">
      <div class="row min-vh-100">
        <div class="col-1 sidebar">
          <%- include("../partials/navbar.ejs") %>
        </div>

        <div class="col-11 content bg-gradient">
          <div class="row">
            <h1 class="text-white">Successfully uploaded new file!</h1>
          </div>
          <div class="row">
            <div id="mynetwork"></div>
          </div>
        </div>
      </div>
    </div>


    <script type="text/javascript">
      var nodes = []
      var edges =[]

      <% for(var i=0; i<nodes.length; i++) { %>
            nodes.push({id:"<%=nodes[i].id %>", label:"<%=nodes[i].label%>"});
      <%}%>
      <% for(var i=0; i<edges.length; i++) { %>
            edges.push({from:"<%=edges[i].from %>", to:"<%=edges[i].to%>", value:"<%=edges[i].value%>"});
      <%}%>

      // create an array with nodes
      nodes = new vis.DataSet(nodes);

      // create an array with edges
      edges = new vis.DataSet(edges);

      // create a network
      var container = document.getElementById("mynetwork");

      var data = {
        nodes: nodes,
        edges: edges,
      };

      var options = {
        manipulation: {
          addNode: function(nodeData,callback) {
            nodeData.label = 'hello world';
            callback(nodeData);
          },
          editNode: function(nodeData,callback) {
            document.getElementById("operation").innerText = "Edit Node";
            document.getElementById("node-id").value = nodeData.id;
            document.getElementById("node-label").value = nodeData.label;
            document.getElementById("saveButton").onclick = saveNodeData.bind(
              this,
              nodeData,
              callback
            );
            document.getElementById("cancelButton").onclick = cancelEdit.bind(
              this,
              callback
            );
            document.getElementById("network-popUp").style.display = "block";
            document.getElementById("nodeEdit").style.display = "block";
          },
          addEdge: function(edgeData,callback) {
            if (edgeData.from !== edgeData.to) {
              callback(edgeData);
            }
          },
          editEdge: function(edgeData,callback) {
            if (edgeData.from !== edgeData.to) {
            document.getElementById("operation").innerText = "Edit Edge";
            document.getElementById("edge-to").innerText = "To: "+edgeData.to;
            document.getElementById("edge-from").innerText = "From: "+edgeData.from;
            document.getElementById("edge-value").value = "Enter value";

            document.getElementById("saveButton").onclick = saveEdgeData.bind(
              this,
              edgeData,
              callback
            );
            document.getElementById("cancelButton").onclick = cancelEdit.bind(
              this,
              callback
            );
            document.getElementById("network-popUp").style.display = "block";
            document.getElementById("edgeEdit").style.display = "block";

          }
        }
        }
      };

      var network = new vis.Network(container, data, options);

      function clearPopUp() {
        document.getElementById("saveButton").onclick = null;
        document.getElementById("cancelButton").onclick = null;
        document.getElementById("network-popUp").style.display = "none";
        document.getElementById("nodeEdit").style.display = "none";
        document.getElementById("edgeEdit").style.display = "none";
      }

      function cancelEdit(callback) {
        clearPopUp();
        callback(null);
      }

      function saveNodeData(data, callback) {
        data.id = document.getElementById("node-id").value;
        data.label = document.getElementById("node-label").value;
        clearPopUp();
        callback(data);
      }
      function saveEdgeData(data, callback) {
        data.value = document.getElementById("edge-value").value;
        clearPopUp();
        callback(data);
      }
    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js"
    integrity="sha384-QJHtvGhmr9XOIpI6YVutG+2QOK9T+ZnN4kzFN1RtK3zEFEIsxhlmWl5/YESvpZ13" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
  </body>
</html>
